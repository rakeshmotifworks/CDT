@model CDT.Repo.View_Model.Composite.ICComposite

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


<style type="text/css">
    #dvLoading {
        background: url(../Images/loading.gif) no-repeat center center;
        height: 300px;
        width: 300px;
        position: fixed;
        z-index: 1000;
        left: 50%;
        top: 50%;
        margin: -20px 0 0 -25px;
        /*opacity: 2px;*/
    }
</style>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()*@

@{
    int count = 0;
    if (Convert.ToInt16(Session["MnfsCount"]) == 1)
    {
        count = Convert.ToInt16(Session["MnfsCount"]);
    }
    else
    {
        count = Convert.ToInt16(Session["MnfsCount"]);
    }
}

@for (int i = count - 1; i < count; i++)
{
    <div class="form-horizontal col-md-10">
        @*<h4>ICMnf</h4>
            <hr />
            @Html.ValidationSummary(true)*@

        <div class="form-group">
            @Html.LabelFor(model => model.ICMainMnf[i].Mfr__Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICMainMnf[i].Mfr__Name)
                @Html.ValidationMessageFor(model => model.ICMainMnf[i].Mfr__Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ICMainMnf[i].Mfr__Part_Number, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICMainMnf[i].Mfr__Part_Number)
                @Html.ValidationMessageFor(model => model.ICMainMnf[i].Mfr__Part_Number)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ICMainMnf[i].Part_Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICMainMnf[i].Part_Status)
                @Html.ValidationMessageFor(model => model.ICMainMnf[i].Part_Status)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ICMainMnf[i].RoHS_Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICMainMnf[i].RoHS_Status)
                @Html.ValidationMessageFor(model => model.ICMainMnf[i].RoHS_Status)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ICMainMnf[i].Comments, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICMainMnf[i].Comments)
                @Html.ValidationMessageFor(model => model.ICMainMnf[i].Comments)
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Type)
                    @Html.ValidationMessageFor(model => model.Type)
                </div>
            </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.M_Id, "M_Id", new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
        @*@Html.DropDownList("M_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.M_Id)*@
        @*</div>
            </div>*@

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>*@
    </div>
}


@*}*@

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
